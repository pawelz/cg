#!/bin/sh

# Copyright © 2010 by Paweł Zuzelski <pawelz@pld-linux.org>
# Author: Paweł Zuzelski <pawelz@pld-linux.org>

# This program is free software. It comes without any warranty, to the extent
# permitted by applicable law. You can redistribute it and/or modify it under
# the terms of the Do What The Fuck You Want To Public License, Version 2, as
# published by Sam Hocevar. See http://sam.zoy.org/wtfpl/COPYING for more
# details.

### Set variables {{{
ROOTRELPATH=$(pwd | sed 's/[^/]\+/../g')/
ROOTRELPATH=${ROOTRELPATH#/}
ROOTRELPATH=${ROOTRELPATH#/}
GIT_DIR=/var/lib/cg/root
GIT_WORK_TREE="/"
GIT_CEILING_DIRECTORIES=/tmp:/var/spool:/var/cache:/home
### }}}

### Vservers support {{{
if [ "$(basename $0)" == "vcg" ]; then
	VSERVERMODE=true

	vserver="$1"
	shift

	# Assume that Vservers are installed in /vserver. Better solutions will be
	# implemented later.
	GIT_WORK_TREE="/vservers/$vserver"
	GIT_DIR="/var/lib/cg/vservers/$vserver"
fi
### }}}

### Export final version of variables {{{
export GIT_DIR
export GIT_WORK_TREE
export GIT_CEILING_DIRECTORIES
### }}}

### Helper functions {{{
die() {
	echo "$@" >&2
	exit 1
}
### }}}

### Functions {{{
initrepo() {
	[ -d "$GIT_DIR" ] && die "GIT_DIR=$GIT_DIR already exists."
	mkdir "$GIT_DIR"
	git init
	git config --add core.excludesfile /etc/cg/ignore
	git config --add core.sharedrepository true
	git config --add core.bare true
	echo "$GIT_DIR" > "$GIT_WORK_TREE/.cg"
	git add "$GIT_WORK_TREE/.cg"
	git commit -m "Initial"
	git branch deploy
	git checkout deploy
	chgrp -R cg "$GIT_DIR"
	chmod -R ug+rwX,o-rwx "$GIT_DIR"
}

cginfo() {
	echo "GIT_DIR=$GIT_DIR"
	echo "GIT_WORK_TREE=$GIT_WORK_TREE"
	echo "clone url: ssh://$(hostname)$GIT_DIR"
}
### }}}

### Parse global opts {{{
while [ "$1" == "-${1#-}" ]; do
	case "$1" in
		'--init')
			initrepo
			exit
			;;
		'--info')
			cginfo
			exit
			;;
		*)
			GITOPTS="$GITOPTS $1"
			;;
	esac
	shift
done
### }}}

### Parse git command opts and parameters {{{
GITCOMMAND="$1"

[ "$GITCOMMAND" = "init" ] && die "Don't use init directly. Use --init."

shift

while [ "$1" ]; do
	O=${1#/}
	[ "$O" != "$1" ] && O=$ROOTRELPATH$O
	GITCMDOPTS="$GITCMDOPTS $O"
	shift
done
### }}}

### Engage {{{
exec git $GITOPTS $GITCOMMAND $GITCMDOPTS
### }}}

# vim:foldmethod=marker
